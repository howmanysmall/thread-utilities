{"searchDocs":[{"title":"Getting Started with ThreadUtilities","type":0,"sectionRef":"#","url":"/thread-utilities/docs/intro","content":"Getting Started with ThreadUtilities Here are some quick links to get started using ThreadUtilities: Installation guideAPI Docs","keywords":"","version":"Next"},{"title":"Installation","type":0,"sectionRef":"#","url":"/thread-utilities/docs/installation","content":"","keywords":"","version":"Next"},{"title":"Method #1 - RepoToRoblox​","type":1,"pageTitle":"Installation","url":"/thread-utilities/docs/installation#method-1---repotoroblox","content":" Using the RepoToRoblox plugin is the easiest way to install in Studio.  In the RepoToRoblox widget, enter howmanysmall as the owner and thread-utilities as the repository.Click the Clone Repository button.  ","version":"Next","tagName":"h2"},{"title":"Method 2 - Wally​","type":1,"pageTitle":"Installation","url":"/thread-utilities/docs/installation#method-2---wally","content":" Setup Wally by using wally init.Add howmanysmall/thread-utilities as a dependency.  [dependencies] ThreadUtilities = &quot;howmanysmall/thread-utilities@^1.1.0&quot;  ","version":"Next","tagName":"h2"},{"title":"ThreadUtilities","type":0,"sectionRef":"#","url":"/thread-utilities/api/ThreadUtilities","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#functions","content":" ","version":null,"tagName":"h2"},{"title":"NoYield​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#NoYield","content":"&lt;/&gt; ThreadUtilities.NoYield( callback: (Arguments...) → Returns...,-- The function to execute. ...: Arguments...-- The arguments to the function. ) → Returns... Executes a function and throws an error if yields at all. print(ThreadUtilities.NoYield(function() return &quot;This&quot;, &quot;doesn't&quot;, &quot;yield&quot; end)) -- This doesn't yield print(ThreadUtilities.NoYield(function() task.wait() return &quot;Errors!!!&quot; end)) -- Throws an error! print(NoYield(() =&gt; $tuple(&quot;This&quot;, &quot;doesn't&quot;, &quot;yield&quot;))) // This doesn't yield; print( NoYield(() =&gt; { task.wait(); return &quot;Errors!!!&quot;; }), ); // Throws an error!   ","version":null,"tagName":"h3"},{"title":"FastDelay​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#FastDelay","content":"&lt;/&gt; ThreadUtilities.FastDelay( delay: number,-- The delay before the function is executed. callback: (Arguments...) → (),-- The function to spawn. ...: Arguments...-- The arguments to the function. ) → thread Delays a function call in a much more performant manner than task.delay.  ","version":null,"tagName":"h3"},{"title":"FastDefer​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#FastDefer","content":"&lt;/&gt; ThreadUtilities.FastDefer( callback: (Arguments...) → (),-- The function to spawn. ...: Arguments...-- The arguments to the function. ) → thread Defers a function call in a much more performant manner than task.defer.  ","version":null,"tagName":"h3"},{"title":"SafeThreadCancel​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#SafeThreadCancel","content":"&lt;/&gt; ThreadUtilities.SafeThreadCancel( thread: thread-- The thread to cancel. ) → () Cancelling threads can sometimes cause weird issues that throw errors. This function is a workaround for that to make sure your threads are always cancelled in a safe manner.  ","version":null,"tagName":"h3"},{"title":"FastDeferSafe​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#FastDeferSafe","content":"since v1.1.0 &lt;/&gt; ThreadUtilities.FastDeferSafe( callback: (Arguments...) → (),-- The function to spawn. ...: Arguments...-- The arguments to the function. ) → thread Defers a function call in a much more performant manner than task.defer. This version is safer than ThreadUtilities.FastDefer as I think the use of varargs can cause some issues.  ","version":null,"tagName":"h3"},{"title":"FastSpawn​","type":1,"pageTitle":"ThreadUtilities","url":"/thread-utilities/api/ThreadUtilities#FastSpawn","content":"&lt;/&gt; ThreadUtilities.FastSpawn( callback: (Arguments...) → (),-- The function to spawn. ...: Arguments...-- The arguments to the function. ) → thread Spawns a function call in a much more performant manner than task.spawn or the coroutine library can provide. ","version":null,"tagName":"h3"}],"options":{"id":"default"}}